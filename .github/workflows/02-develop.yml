name: 02 - Build and Deploy to DEV on AWS

on:
  pull_request:
    branches:
      - develop
    types: [closed]

jobs:
  create-version:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.bump_version.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Determine version bump
        id: version_bump
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          
          if [[ $COMMIT_MESSAGE == *"BREAKING CHANGE"* ]]; then
            echo "bump=major" >> $GITHUB_OUTPUT
          elif [[ $COMMIT_MESSAGE == *"feat:"* ]]; then
            echo "bump=minor" >> $GITHUB_OUTPUT
          elif [[ $COMMIT_MESSAGE == *"fix:"* ]] || [[ $COMMIT_MESSAGE == *"chore:"* ]]; then
            echo "bump=patch" >> $GITHUB_OUTPUT
          else
            echo "bump=patch" >> $GITHUB_OUTPUT
          fi
      
      - name: Get latest tag
        id: latest_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
      
      - name: Bump version
        id: bump_version
        if: steps.version_bump.outputs.bump != ''
        run: |
          MAJOR=$(echo "${{ steps.latest_tag.outputs.tag }}" | cut -d. -f1)
          MINOR=$(echo "${{ steps.latest_tag.outputs.tag }}" | cut -d. -f2)
          PATCH=$(echo "${{ steps.latest_tag.outputs.tag }}" | cut -d. -f3)
          
          case "${{ steps.version_bump.outputs.bump }}" in
            "major")
              new_version="v$((MAJOR+1)).0.0"
              ;;
            "minor")
              new_version="v${MAJOR}.$((MINOR+1)).0"
              ;;
            "patch")
              new_version="v${MAJOR}.${MINOR}.$((PATCH+1))"
              ;;
          esac
          
          echo "new_version=$new_version" >> $GITHUB_OUTPUT
    

  build-deploy:
    needs: create-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Pull Request to Release
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: release/${{ needs.create-tag.outputs.new_version }}
          branch: develop
          title: 'Branch criada automaticamente -> release/${{ needs.create-tag.outputs.new_version }}'
          body: 'This PR was automatically created by GitHub Actions.'
          draft: false

          