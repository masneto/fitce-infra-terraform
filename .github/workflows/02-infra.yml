name: 02 - Fitce Infra Terraform

on:
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  terraform:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Zip Terraform files
        run: cd infra && zip -r ../terraform.zip .
      
      - name: Upload Terraform zip to EC2 via SSM
        id: upload_zip
        run: |
          aws ssm put-parameter \
            --name "terraform-zip-content" \
            --type "String" \
            --value "$(base64 -w0 terraform.zip)" \
            --overwrite

          command_id=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=${{ secrets.EC2_INSTANCE_ID }}" \
            --parameters 'commands=["aws ssm get-parameter --name terraform-zip-content --query Parameter.Value --output text | base64 -d > /home/ec2-user/terraform.zip"]' \
            --comment "Transfer zip file to EC2" \
            --query "Command.CommandId" \
            --output text)
          echo "command_id=$command_id" >> $GITHUB_ENV

      # - name: Unzip Terraform files on EC2
      #   run: |
      #     aws ssm send-command \
      #       --document-name "AWS-RunShellScript" \
      #       --targets "Key=instanceids,Values=${{ secrets.EC2_INSTANCE_ID }}" \
      #       --parameters 'commands=["unzip -o /home/ec2-user/terraform.zip -d /home/ec2-user/terraform"]' \
      #       --comment "Unzip Terraform files on EC2 instance" \
      #       --query "Command.CommandId" \
      #       --output text

      # - name: Adjust permissions on EC2
      #   run: |
      #     aws ssm send-command \
      #       --document-name "AWS-RunShellScript" \
      #       --targets "Key=instanceids,Values=${{ secrets.EC2_INSTANCE_ID }}" \
      #       --parameters 'commands=["sudo chown -R ubuntu:ubuntu /home/ubuntu/terraform"]' \
      #       --comment "Adjust permissions on EC2 instance" \
      #       --query "Command.CommandId" \
      #       --output text

      - name: Upload Terraform files to EC2
        id: upload_terraform
        run: |
          command_id=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=${{ secrets.EC2_INSTANCE_ID }}" \
            --parameters 'commands=["mkdir -p /home/ubuntu/terraform", "unzip -o /home/ubuntu/terraform.zip -d /home/ubuntu/terraform"]' \
            --comment "Copy Terraform files to EC2 instance" \
            --query "Command.CommandId" \
            --output text)
          echo "command_id=$command_id" >> $GITHUB_ENV

      - name: Get Upload Logs
        run: |
          aws ssm get-command-invocation \
            --command-id ${{ env.command_id }} \
            --instance-id ${{ secrets.EC2_INSTANCE_ID }} \
            --query "StandardOutputContent" \
            --output text

      - name: Execute Terraform Init on EC2
        id: terraform_init
        run: |
          command_id=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=${{ secrets.EC2_INSTANCE_ID }}" \
            --parameters 'commands=["cd /home/ec2-user/terraform", "terraform init"]' \
            --comment "Initialize Terraform on EC2 instance" \
            --query "Command.CommandId" \
            --output text)
          echo "command_id=$command_id" >> $GITHUB_ENV

      - name: Get Init Logs
        run: |
          aws ssm get-command-invocation \
            --command-id ${{ env.command_id }} \
            --instance-id ${{ secrets.EC2_INSTANCE_ID }} \
            --query "StandardOutputContent" \
            --output text

      - name: Execute Terraform Plan on EC2
        id: terraform_plan
        run: |
          command_id=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets "Key=instanceids,Values=${{ secrets.EC2_INSTANCE_ID }}" \
            --parameters 'commands=["cd /home/ec2-user/terraform", "terraform plan"]' \
            --comment "Plan Terraform on EC2 instance" \
            --query "Command.CommandId" \
            --output text)
          echo "command_id=$command_id" >> $GITHUB_ENV

      - name: Get Plan Logs
        run: |
          aws ssm get-command-invocation \
            --command-id ${{ env.command_id }} \
            --instance-id ${{ secrets.EC2_INSTANCE_ID }} \
            --query "StandardOutputContent" \
            --output text

      # - name: Setup Terraform
      #   uses: hashicorp/setup-terraform@v3
      #   with:
      #     terraform_version: "1.1.7"

      # - name: Terraform Init
      #   run: terraform init
      #   working-directory: ./infra

      # - name: Terraform Plan
      #   run: terraform plan
      #   working-directory: ./infra

      # - name: Terraform Apply
      #   id: apply
      #   run: terraform apply -auto-approve
      #   working-directory: ./infra
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_DEFAULT_REGION: sa-east-1

      # - name: Verify Terraform Apply
      #   run: |
      #     echo "Verifying Terraform Apply..."
      #     terraform show
      #   working-directory: ./infra