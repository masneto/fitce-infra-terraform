name: 02 - Fitce Infra Terraform

on:
  pull_request:
    branches:
      - main
    types: [closed, opened, synchronize]

jobs:
  terraform:
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: "1.10.5"

      - name: Initialize Terraform
        working-directory: infra
        run: terraform init

      - name: Check Existing Resources
        working-directory: infra
        run: |
          echo "üîç Verificando estado atual dos recursos..."
          
          # Atualiza o estado e verifica diferen√ßas
          terraform plan -refresh-only -detailed-exitcode
          PLAN_EXIT_CODE=$?
          
          # Interpreta o c√≥digo de sa√≠da
          # 0 = Sem mudan√ßas
          # 1 = Erro
          # 2 = Mudan√ßas encontradas
          if [ $PLAN_EXIT_CODE -eq 1 ]; then
            echo "‚ùå Erro ao verificar recursos"
            exit 1
          elif [ $PLAN_EXIT_CODE -eq 2 ]; then
            echo "‚ö†Ô∏è Recursos existentes detectados que diferem do estado"
            echo "Execute 'terraform import' para os recursos existentes"
            terraform show
            exit 1
          else
            echo "‚úÖ Estado atual corresponde com a configura√ß√£o"
          fi

      - name: Terraform Plan
        if: success()
        working-directory: infra
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: success()
        working-directory: infra
        run: terraform apply tfplan